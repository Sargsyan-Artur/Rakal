{
  "openapi": "3.0.1",
  "info": {
    "version": "0.0.1",
    "title": "Categories",
    "description": "A set of API operations to manage Categories."
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "paths": {
    "/categories/{merchantId}": {
      "get": {
        "tags": [
          "categories-rest-controller"
        ],
        "summary": "Returns Categories for merchant identifier.",
        "operationId": "findCategories",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "The offset into the results matching the query can be set using the offset query parameter. The default value is 0, indicating that no results should be skipped.",
            "required": false,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return from a query. Allowed is a value between 1 and 200. The default limit is 20",
            "required": false,
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int64",
              "default": 20
            }
          },
          {
            "name": "merchantId",
            "in": "path",
            "description": "Allows to filter categories that belong to the specified merchant",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Allows to set sort field for categories that belong to the specified merchant",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "name"
              ]
            },
            "example": "name"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Allows to set sort order for categories that belong to the specified merchant",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc"
            },
            "example": "asc"
          }
        ],
        "responses": {
          "500": {
            "description": "Internal error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect values were specified or not all required fields were set.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Successfully found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryResponsePagedDTO"
                }
              }
            }
          },
          "401": {
            "description": "User is not authenticated"
          },
          "403": {
            "description": "User doesn't have enough permissions"
          },
          "404": {
            "description": "Requested resource is not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "categories-rest-controller"
        ],
        "summary": "Adds Categories for merchant identifier.",
        "operationId": "addCategories",
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "description": "Merchant identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CategoryRequestDTO"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "500": {
            "description": "Internal error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Indicates that resource was successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryResponseDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "User is not authenticated"
          },
          "400": {
            "description": "Incorrect values were specified or not all required fields were set",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "User doesn't have enough permissions"
          },
          "404": {
            "description": "Requested resource is not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/categories/{merchantId}/{categoryId}": {
      "delete": {
        "tags": [
          "categories-rest-controller"
        ],
        "summary": "Delete Category for merchant identifier.",
        "operationId": "deleteCategory",
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "description": "Merchant identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "categoryId",
            "in": "path",
            "description": "Category identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Indicates that existing resource was successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "User is not authenticated"
          },
          "400": {
            "description": "Incorrect values were specified or not all required fields were set",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "User doesn't have enough permissions"
          },
          "404": {
            "description": "Requested resource is not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CategoryRequestDTO": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "parentId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryRequestDTO"
            }
          },
          "version": {
            "type": "integer",
            "format": "int64"
          }
        },
        "description": "Represents Category Request DTO."
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string"
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "detail": {
            "type": "string"
          },
          "path": {
            "type": "string"
          }
        }
      },
      "CategoryResponseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "parentId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "merchantId": {
            "type": "string"
          },
          "level": {
            "type": "integer",
            "format": "int32"
          },
          "version": {
            "type": "integer",
            "format": "int64"
          },
          "order": {
            "type": "string"
          },
          "divisions": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryResponseDTO"
            }
          }
        },
        "description": "Represents Category Response DTO.",
        "readOnly": true
      },
      "CategoryResponsePagedDTO": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "description": "The offset supplied by the client or the server default. It is the number of elements skipped, not a page number.",
            "format": "int64",
            "readOnly": true
          },
          "limit": {
            "type": "integer",
            "description": "Shows how many items the current page can contains.",
            "format": "int64",
            "readOnly": true
          },
          "count": {
            "type": "integer",
            "description": "The actual number of results returned in results.",
            "format": "int64",
            "readOnly": true
          },
          "total": {
            "type": "integer",
            "description": "The total number of results matching the query.",
            "format": "int64",
            "readOnly": true
          },
          "results": {
            "type": "array",
            "description": "List of results",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/CategoryResponseDTO"
            }
          },
          "prevPage": {
            "type": "string",
            "description": "Generated link to the previous page. If the current page is the first - contains 'null'",
            "nullable": true,
            "readOnly": true
          },
          "nextPage": {
            "type": "string",
            "description": "Generated link to the next page. If the current page is the last one - contains 'null'",
            "nullable": true,
            "readOnly": true
          }
        }
      }
    }
  }
}
