/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface IPaths {
    readonly '/api/v1/types': {
        readonly get: IOperations['getAll'];
        readonly put: IOperations['update'];
        readonly post: IOperations['createType'];
    };
    readonly '/api/v1/sub-types': {
        readonly put: IOperations['update_1'];
    };
    readonly '/api/v1/merchant/workflow': {
        readonly get: IOperations['getAllMerchantWorkflowConfig'];
        readonly put: IOperations['updateMerchantWorkflowConfig'];
        readonly post: IOperations['createMerchantWorkflowConfig'];
    };
    readonly '/api/v1/merchant/workflow/{/id}': {
        readonly put: IOperations['updateStep'];
    };
    readonly '/api/v1/location/workflow': {
        readonly get: IOperations['getAllLocationWorkflowConfig'];
        readonly put: IOperations['updateLocationWorkflowConfig'];
        readonly post: IOperations['createLocationWorkflowConfig'];
    };
    readonly '/api/v1/business/workflow': {
        readonly get: IOperations['getAllBusinessWorkflowConfig'];
        readonly put: IOperations['updateBusinessWorkflowConfig'];
        readonly post: IOperations['createBusinessWorkflowConfig'];
    };
    readonly '/api/v1/types/{typeId}/sub-types/': {
        readonly post: IOperations['addSubType'];
    };
    readonly '/api/v1/merchant/workflow/{id}': {
        readonly get: IOperations['getMerchantWorkflowConfig'];
        readonly delete: IOperations['delete_2'];
    };
    readonly '/api/v1/location/workflow/{id}': {
        readonly get: IOperations['getLocationWorkflowConfig'];
        readonly delete: IOperations['deleteLocationWorkflowConfig'];
    };
    readonly '/api/v1/location/workflow/{id}/inherit-change': {
        readonly get: IOperations['changeInheritFromParentState'];
    };
    readonly '/api/v1/business/workflow/{id}': {
        readonly get: IOperations['getBusinessWorkflowConfig'];
        readonly delete: IOperations['deleteBusinessWorkflowConfig'];
    };
    readonly '/api/v1/business/workflow/{id}/inherit-change': {
        readonly get: IOperations['changeInheritFromParentState_1'];
    };
    readonly '/api/v1/types/{id}': {
        readonly delete: IOperations['delete'];
    };
    readonly '/api/v1/sub-types/{subTypeId}': {
        readonly delete: IOperations['delete_1'];
    };
}

export interface components {
    readonly schemas: {
        readonly JobSubTypeDTO: {
            readonly id?: string;
            readonly name?: string;
        };
        readonly JobTypeDTO: {
            readonly id?: string;
            readonly merchantId?: string;
            readonly name?: string;
            readonly jobSubTypes?: readonly components['schemas']['JobSubTypeDTO'][];
        };
        readonly FieldDTO: {
            readonly id?: string;
            readonly fieldValue?: string;
        };
        readonly MerchantWorkflowConfigDTO: {
            readonly id?: string;
            readonly merchantId?: string;
            readonly name?: string;
            readonly workflowSteps?: readonly components['schemas']['WorkflowStepDTO'][];
            readonly types?: readonly components['schemas']['JobTypeDTO'][];
        };
        readonly WorkflowStepDTO: {
            readonly id?: string;
            readonly name?: string;
            readonly label?: string;
            readonly hide?: boolean;
            readonly orderValue?: number;
            readonly orderStatus?: boolean;
            readonly fields?: readonly components['schemas']['FieldDTO'][];
        };
        readonly LocationWorkflowConfigDTO: {
            readonly workflowId?: number;
            readonly stepName?: string;
            readonly label?: string;
            readonly hide?: boolean;
            readonly orderValue?: number;
            readonly orderStatus?: boolean;
            readonly type?: string;
            readonly fields?: readonly components['schemas']['FieldDTO'][];
            readonly locationId?: number;
            readonly locationName?: string;
            readonly inheritFromParent?: boolean;
        };
        readonly BusinessWorkflowConfigDTO: {
            readonly workflowId?: number;
            readonly stepName?: string;
            readonly label?: string;
            readonly hide?: boolean;
            readonly orderValue?: number;
            readonly orderStatus?: boolean;
            readonly type?: string;
            readonly fields?: readonly components['schemas']['FieldDTO'][];
            readonly businessUnitId?: number;
            readonly businessUnitName?: string;
            readonly inheritFromParent?: boolean;
            readonly locationWorkflowConfigs?: readonly components['schemas']['LocationWorkflowConfigDTO'][];
        };
        readonly PageJobTypeDTO: {
            readonly totalPages?: number;
            readonly totalElements?: number;
            readonly size?: number;
            readonly content?: readonly components['schemas']['JobTypeDTO'][];
            readonly number?: number;
            readonly sort?: components['schemas']['Sort'];
            readonly first?: boolean;
            readonly last?: boolean;
            readonly numberOfElements?: number;
            readonly pageable?: components['schemas']['PageableObject'];
            readonly empty?: boolean;
        };
        readonly PageableObject: {
            readonly offset?: number;
            readonly sort?: components['schemas']['Sort'];
            readonly pageNumber?: number;
            readonly pageSize?: number;
            readonly paged?: boolean;
            readonly unpaged?: boolean;
        };
        readonly Sort: {
            readonly empty?: boolean;
            readonly sorted?: boolean;
            readonly unsorted?: boolean;
        };
    };
}

export interface IOperations {
    readonly getAll: {
        readonly parameters: {
            readonly query: {
                readonly mid: string;
                /** Zero-based page index (0..N) */
                readonly page?: number;
                /** The size of the page to be returned */
                readonly size?: number;
                /** Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
                readonly sort?: readonly string[];
            };
        };
        readonly responses: {
            /** OK */
            readonly 200: {
                readonly content: {
                    readonly '*/*': components['schemas']['PageJobTypeDTO'];
                };
            };
        };
    };
    readonly update: {
        readonly responses: {
            /** OK */
            readonly 200: {
                readonly content: {
                    readonly '*/*': components['schemas']['JobTypeDTO'];
                };
            };
        };
        readonly requestBody: {
            readonly content: {
                readonly 'application/json': components['schemas']['JobTypeDTO'];
            };
        };
    };
    readonly createType: {
        readonly responses: {
            /** OK */
            readonly 200: {
                readonly content: {
                    readonly '*/*': components['schemas']['JobTypeDTO'];
                };
            };
        };
        readonly requestBody: {
            readonly content: {
                readonly 'application/json': components['schemas']['JobTypeDTO'];
            };
        };
    };
    readonly update_1: {
        readonly responses: {
            /** OK */
            readonly 200: {
                readonly content: {
                    readonly '*/*': components['schemas']['JobSubTypeDTO'];
                };
            };
        };
        readonly requestBody: {
            readonly content: {
                readonly 'application/json': components['schemas']['JobSubTypeDTO'];
            };
        };
    };
    readonly getAllMerchantWorkflowConfig: {
        readonly responses: {
            /** OK */
            readonly 200: {
                readonly content: {
                    readonly '*/*': readonly components['schemas']['MerchantWorkflowConfigDTO'][];
                };
            };
        };
    };
    readonly updateMerchantWorkflowConfig: {
        readonly responses: {
            /** OK */
            readonly 200: {
                readonly content: {
                    readonly '*/*': components['schemas']['MerchantWorkflowConfigDTO'];
                };
            };
        };
        readonly requestBody: {
            readonly content: {
                readonly 'application/json': components['schemas']['MerchantWorkflowConfigDTO'];
            };
        };
    };
    readonly createMerchantWorkflowConfig: {
        readonly responses: {
            /** OK */
            readonly 200: {
                readonly content: {
                    readonly '*/*': components['schemas']['MerchantWorkflowConfigDTO'];
                };
            };
        };
        readonly requestBody: {
            readonly content: {
                readonly 'application/json': components['schemas']['MerchantWorkflowConfigDTO'];
            };
        };
    };
    readonly updateStep: {
        readonly parameters: {
            readonly path: {
                readonly id: string;
            };
        };
        readonly responses: {
            /** OK */
            readonly 200: {
                readonly content: {
                    readonly '*/*': components['schemas']['MerchantWorkflowConfigDTO'];
                };
            };
        };
        readonly requestBody: {
            readonly content: {
                readonly 'application/json': components['schemas']['WorkflowStepDTO'];
            };
        };
    };
    readonly getAllLocationWorkflowConfig: {
        readonly responses: {
            /** OK */
            readonly 200: {
                readonly content: {
                    readonly '*/*': readonly components['schemas']['LocationWorkflowConfigDTO'][];
                };
            };
        };
    };
    readonly updateLocationWorkflowConfig: {
        readonly responses: {
            /** OK */
            readonly 200: {
                readonly content: {
                    readonly '*/*': components['schemas']['LocationWorkflowConfigDTO'];
                };
            };
        };
        readonly requestBody: {
            readonly content: {
                readonly 'application/json': components['schemas']['LocationWorkflowConfigDTO'];
            };
        };
    };
    readonly createLocationWorkflowConfig: {
        readonly responses: {
            /** OK */
            readonly 200: {
                readonly content: {
                    readonly '*/*': components['schemas']['LocationWorkflowConfigDTO'];
                };
            };
        };
        readonly requestBody: {
            readonly content: {
                readonly 'application/json': components['schemas']['LocationWorkflowConfigDTO'];
            };
        };
    };
    readonly getAllBusinessWorkflowConfig: {
        readonly responses: {
            /** OK */
            readonly 200: {
                readonly content: {
                    readonly '*/*': readonly components['schemas']['BusinessWorkflowConfigDTO'][];
                };
            };
        };
    };
    readonly updateBusinessWorkflowConfig: {
        readonly responses: {
            /** OK */
            readonly 200: {
                readonly content: {
                    readonly '*/*': components['schemas']['BusinessWorkflowConfigDTO'];
                };
            };
        };
        readonly requestBody: {
            readonly content: {
                readonly 'application/json': components['schemas']['BusinessWorkflowConfigDTO'];
            };
        };
    };
    readonly createBusinessWorkflowConfig: {
        readonly responses: {
            /** OK */
            readonly 200: {
                readonly content: {
                    readonly '*/*': components['schemas']['BusinessWorkflowConfigDTO'];
                };
            };
        };
        readonly requestBody: {
            readonly content: {
                readonly 'application/json': components['schemas']['BusinessWorkflowConfigDTO'];
            };
        };
    };
    readonly addSubType: {
        readonly parameters: {
            readonly path: {
                readonly typeId: string;
            };
        };
        readonly responses: {
            /** OK */
            readonly 200: {
                readonly content: {
                    readonly '*/*': components['schemas']['JobTypeDTO'];
                };
            };
        };
        readonly requestBody: {
            readonly content: {
                readonly 'application/json': components['schemas']['JobSubTypeDTO'];
            };
        };
    };
    readonly getMerchantWorkflowConfig: {
        readonly parameters: {
            readonly path: {
                readonly id: string;
            };
        };
        readonly responses: {
            /** OK */
            readonly 200: {
                readonly content: {
                    readonly '*/*': components['schemas']['MerchantWorkflowConfigDTO'];
                };
            };
        };
    };
    readonly delete_2: {
        readonly parameters: {
            readonly path: {
                readonly id: string;
            };
        };
        readonly responses: {
            /** OK */
            readonly 200: unknown;
        };
    };
    readonly getLocationWorkflowConfig: {
        readonly parameters: {
            readonly path: {
                readonly id: number;
            };
        };
        readonly responses: {
            /** OK */
            readonly 200: {
                readonly content: {
                    readonly '*/*': components['schemas']['LocationWorkflowConfigDTO'];
                };
            };
        };
    };
    readonly deleteLocationWorkflowConfig: {
        readonly parameters: {
            readonly path: {
                readonly id: number;
            };
        };
        readonly responses: {
            /** OK */
            readonly 200: unknown;
        };
    };
    readonly changeInheritFromParentState: {
        readonly parameters: {
            readonly path: {
                readonly id: number;
            };
        };
        readonly responses: {
            /** OK */
            readonly 200: {
                readonly content: {
                    readonly '*/*': components['schemas']['LocationWorkflowConfigDTO'];
                };
            };
        };
    };
    readonly getBusinessWorkflowConfig: {
        readonly parameters: {
            readonly path: {
                readonly id: number;
            };
        };
        readonly responses: {
            /** OK */
            readonly 200: {
                readonly content: {
                    readonly '*/*': components['schemas']['BusinessWorkflowConfigDTO'];
                };
            };
        };
    };
    readonly deleteBusinessWorkflowConfig: {
        readonly parameters: {
            readonly path: {
                readonly id: number;
            };
        };
        readonly responses: {
            /** OK */
            readonly 200: unknown;
        };
    };
    readonly changeInheritFromParentState_1: {
        readonly parameters: {
            readonly path: {
                readonly id: number;
            };
        };
        readonly responses: {
            /** OK */
            readonly 200: {
                readonly content: {
                    readonly '*/*': components['schemas']['BusinessWorkflowConfigDTO'];
                };
            };
        };
    };
    readonly delete: {
        readonly parameters: {
            readonly path: {
                readonly id: string;
            };
        };
        readonly responses: {
            /** OK */
            readonly 200: unknown;
        };
    };
    readonly delete_1: {
        readonly parameters: {
            readonly path: {
                readonly subTypeId: string;
            };
        };
        readonly responses: {
            /** OK */
            readonly 200: unknown;
        };
    };
}

export interface external {}
